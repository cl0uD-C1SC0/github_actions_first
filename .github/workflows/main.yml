name: GitHub Actions Demo
run-name: ${{ github.actor }} Pipeline Deploy 🚀
on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Snyk Install
        run: |
          curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
          chmod +x ./snyk
          mv ./snyk /usr/local/bin/
            
      - name: Snyk Auth
        run: |
          snyk auth $SNYK_TOKEN
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}

      - name: Instalar Pacotes
        run : |
          sudo apt update -y
          sudo apt-get install figlet -y
          
      - name: Configurar AWS CLI
        if: always()
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1
          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export AWS_DEFAULT_REGION="us-east-1"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: DockerLint (CI)
      #   run: |
      #     docker run --rm -i hadolint/hadolint < Dockerfile
      
      - name: Docker Login
        if: always()
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker build (CI)
        run: |
          echo $AWS_ACCESS_KEY_ID
          docker build --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --build-arg AWS_DEFAULT_REGION="us-east-1" -t apicontainer .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Docker Analysis (CI)
        run: |
          snyk container test apicontainer:latest
          if [[ $? == "1" ]]; then
            echo "MUITAS VULNERABILIDADES ENCONTRADAS" | figlet
            exit(1)
          else
            echo "Nenhuma vulnerabilidade encontrada"
            exit(0)

      - name: Docker Push (CD)
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c 1-5)
          echo $COMMIT_SHA

          docker tag apicontainer:latest josegabriel/apicontainer:$COMMIT_SHA
          docker push josegabriel/apicontainer:$COMMIT_SHA


 

      - run: echo "🍏 This job's status is ${{ job.status }}."
